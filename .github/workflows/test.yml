name: test

on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  day1:
    name: "Test Day 1"
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: day1 } }
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "27.1.2"
          gleam-version: "1.6.2"
          rebar3-version: "3"
      - run: gleam deps download
      - run: gleam test
      - run: gleam format --check src test
  day2:
    name: "Test Day 2"
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: day2 } }
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/setup@v2
      - uses: extractions/setup-just@v2
      # - run: just test # ... "test" doesn't work
      - uses: haskell-actions/run-ormolu@v14
  day3:
    name: "Test Day 3"
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: day3 } }
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun test
      - uses: biomejs/setup-biome@v2
      - run: biome check .
  day4:
    name: "Test Day 4"
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: day4 } }
    steps:
      - uses: actions/checkout@v4
      # FIXME: "test" builtin cmd doesn't work on GitHub Actions, so use a C++ Testing Lib
      # - uses: extractions/setup-just@v2
      # - run: just test
  day5:
    name: "Test Day 5"
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: day5 } }
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "27.1.2"
          gleam-version: "1.6.2"
          rebar3-version: "3"
      - run: just test
  day6:
    name: "Test Day 6"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - run: go test ./...
        working-directory: day6
    
